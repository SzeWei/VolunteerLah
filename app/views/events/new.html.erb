
<header
id="top" class="business-header">
</header>

<div class="container">
  <div class="row">
  	<div class="col-md-6">
			<%= render 'form', event: @event, url: events_path, html: { method: :post } %>
		</div>

		<div class="col-md-6">
			<div class="row">
		    <div id="map"></div>
		  </div>
		  <br>
		  <div class="row">
		    <div class="table-responsive">
          <table class="table table-striped">
            <thead>
              <tr>
                <th>#</th>
                <th>Event Name</th>
                <th>From</th>
                <th>To</th>
              </tr>
            </thead>
            <tbody id="getnear">
            </tbody>
          </table>
        </div> 
		  </div>
		</div>
	</div>
</div>

<%= link_to 'Back', events_path %>

<script>
  //set placeholder variables
	var map; //the map element
	var marker; //the map marker object(?) element(?)
	var geocoder; //geocoder tool object
	var temp_result;
  var small_markers = [];

	//define the location of next academy
	var next_academy_latlng = {lat: 3.135045, lng: 101.629905};

	//the function that the google map api will call right after running their js script
	function initMap() {
	    //define the map (the part that showing the map when initMap is ran)
	    map = new google.maps.Map(document.getElementById('map'), {
	        center: next_academy_latlng, 
	        zoom: 8
	    });

	    //set the marker into next academy
	    marker = new google.maps.Marker({
	        position: next_academy_latlng,
	        map: map
	    });

	    //the function that set the initial zoom of the map
	    map.setZoom(8);

	    //define geocoder
	    geocoder = new google.maps.Geocoder();

	    //when user click on map
	    google.maps.event.addListener(map,'click',function(event) {
	        //get latitude(lat) and longitude(lng)
	        document.getElementById('lat').value = event.latLng.lat();
	        document.getElementById('lng').value = event.latLng.lng();

	        //set marker to the click position
	        marker.setPosition({ lat: event.latLng.lat(), lng: event.latLng.lng() });
	        getNearEvent({ lat: event.latLng.lat(), lng: event.latLng.lng() });

	        //get the address with geocoder
	        geocoder.geocode({
	        'latLng': event.latLng
	        }, function(results, status) {
	            if (status == google.maps.GeocoderStatus.OK) {
	                if (results[0]) {
	                    //document.getElementById('address-span').innerHTML = results[0].formatted_address;
	                }
	            }
	        });
	    });
	}

	function updateMap()
 {
 	var addr_full = '';
 	// addr_full += document.getElementById('addr_venue_title').value + ', ';
 	addr_full += document.getElementById('addr_street_address').value + ', ';
 	addr_full += document.getElementById('addr_postal_code').value + ', ';
 	addr_full += document.getElementById('addr_city').value + ', ';
 	addr_full += document.getElementById('addr_state').value;
 
 	geocoder.geocode({
      'address': addr_full
    }, function(results,status) {
      if (status == google.maps.GeocoderStatus.OK) {
        if (results[0]) {
          latlng = {lat: results[0].geometry.location.lat(), lng: results[0].geometry.location.lng()};
          changeMarkedPosition(latlng);
          getNearEvent(latlng);
        }
        else
        {
          latlng = {lat: 3.27229523935188, lng: 101.570401983462};
          changeMarkedPosition(latlng);
          getNearEvent(latlng);
        }
      }
      else
      {
        latlng = {lat: 3.27229523935188, lng: 101.570401983462};
        changeMarkedPosition(latlng);
        getNearEvent(latlng);
      }
    })
 }
 
 function changeMarkedPosition(latlng)
 {
 	map.setCenter(latlng);
 	marker.setPosition(latlng);
 }
 function getNearEvent(latlng)
	{
		$.ajax({
			url:'<%= get_near_event_path %>',
			data:{
				format: 'json',
				category: document.getElementById('event_category').value,
				latitude: latlng.lat,
				longitude: latlng.lng
			},
			error: function() {
      	console.log('AJAX error');
   		},
   		success: function(data) {
   			temp_result = data;

   			var elements = document.getElementsByClassName('repetitive');
		    while(elements.length > 0){
		        elements[0].parentNode.removeChild(elements[0]);
		    }
        for (var i = 0; i < small_markers.length; i++ ) {
          small_markers[i].setMap(null);
        }
        small_markers = [];

   			for (i = 0; i < data.events.length; i++) {
   				$('#getnear').append("<tr class='repetitive' ><td>" + (i + 1) + "</td><td>" + data.events[i].title + "</td><td>" + data.events[i].start_date +"</td><td>" + data.events[i].end_date + "</td></tr>");
          var small_marker = new google.maps.Marker({
            icon: {
              path: google.maps.SymbolPath.CIRCLE,
              scale: 4,
              fillColor: '#00FFFF',
              fillOpacity: 1
            },
            position: {lat: parseFloat(data.events[i].latitude), lng: parseFloat(data.events[i].longitude)},
            map: map
          });

          small_markers.push(small_marker);
   			}


   			//add any javascript that change the html here
   			// data.events .title
   			// title start_date end_date
   		}
		})
	}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBOu5_6K5qsQqXlySNAMGy7j9WPkRZZXrg&callback=initMap"
async defer></script>

